# This workflow will run tests for django-odata on push and pull requests

name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]
        django-version: ["4.2", "5.0", "5.1", "5.2"]
        exclude:
          # Django 5.0+ requires Python 3.10+
          - python-version: "3.8"
            django-version: "5.0"
          - python-version: "3.8"
            django-version: "5.1"
          - python-version: "3.8"
            django-version: "5.2"
          - python-version: "3.9"
            django-version: "5.0"
          - python-version: "3.9"
            django-version: "5.1"
          - python-version: "3.9"
            django-version: "5.2"

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}-${{ hashFiles('**/setup.py') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install Django==${{ matrix.django-version }}
          pip install -e .[dev]

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 django_odata --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 django_odata --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Format check with black
        run: |
          black --check django_odata tests

      - name: Import sort check with isort
        run: |
          isort --profile black --check-only django_odata tests

      - name: Run tests
        run: |
          pytest --cov=django_odata --cov-report=xml --cov-report=term-missing

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        if: matrix.python-version == '3.11' && matrix.django-version == '4.2'
        with:
          file: ./coverage.xml
          fail_ci_if_error: false

  security-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install safety bandit[toml]
          pip install -e .

      - name: Run safety check
        run: |
          safety check

      - name: Run bandit security check
        run: |
          bandit -r django_odata -f json -o bandit-report.json || true
          bandit -r django_odata
